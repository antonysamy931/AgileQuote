//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AgileQuoteWebApplication.AgileQuoteService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteServices")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AgileQuoteService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CompanyList", ReplyAction="http://tempuri.org/IService1/CompanyListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/CompanyListErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        System.Collections.Generic.Dictionary<int, string> CompanyList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckAuthentication", ReplyAction="http://tempuri.org/IService1/CheckAuthenticationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/CheckAuthenticationErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        bool CheckAuthentication(AgileQuoteProperty.Model.Login oLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CheckUsername", ReplyAction="http://tempuri.org/IService1/CheckUsernameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/CheckUsernameErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        bool CheckUsername(AgileQuoteProperty.Model.Login oLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserID", ReplyAction="http://tempuri.org/IService1/GetUserIDResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetUserIDErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        System.Collections.Generic.Dictionary<int, string> GetUserID(AgileQuoteProperty.Model.Login oLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserRole", ReplyAction="http://tempuri.org/IService1/GetUserRoleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetUserRoleErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        string GetUserRole(AgileQuoteProperty.Model.Login oLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoadCurrency", ReplyAction="http://tempuri.org/IService1/LoadCurrencyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/LoadCurrencyErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        System.Collections.Generic.List<AgileQuoteProperty.Model.CurrencyValues> LoadCurrency();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoadSalesOrg", ReplyAction="http://tempuri.org/IService1/LoadSalesOrgResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/LoadSalesOrgErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        System.Collections.Generic.List<AgileQuoteProperty.Model.SalesOrganizations> LoadSalesOrg();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoadStatus", ReplyAction="http://tempuri.org/IService1/LoadStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/LoadStatusErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        System.Collections.Generic.List<string> LoadStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoadBusinessStatus", ReplyAction="http://tempuri.org/IService1/LoadBusinessStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/LoadBusinessStatusErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        System.Collections.Generic.List<string> LoadBusinessStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertQuoteDetails", ReplyAction="http://tempuri.org/IService1/InsertQuoteDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/InsertQuoteDetailsErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        int InsertQuoteDetails(AgileQuoteProperty.Model.Quote qQuote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/QuoteSaveAsNewQuote", ReplyAction="http://tempuri.org/IService1/QuoteSaveAsNewQuoteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/QuoteSaveAsNewQuoteErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        int QuoteSaveAsNewQuote(int QuoteID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateQuoteDetails", ReplyAction="http://tempuri.org/IService1/UpdateQuoteDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/UpdateQuoteDetailsErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        void UpdateQuoteDetails(AgileQuoteProperty.Model.Quote qQuote, int QuoteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertQuotePriceDetails", ReplyAction="http://tempuri.org/IService1/InsertQuotePriceDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/InsertQuotePriceDetailsErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        string InsertQuotePriceDetails(int QuoteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/QuoteShippingInsert", ReplyAction="http://tempuri.org/IService1/QuoteShippingInsertResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/QuoteShippingInsertErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        string QuoteShippingInsert(int QuoteID, decimal TruckCost, decimal DieselCost, decimal OtherCost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetQuoteShippingList", ReplyAction="http://tempuri.org/IService1/GetQuoteShippingListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetQuoteShippingListErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        System.Collections.Generic.List<AgileQuoteProperty.Model.QuoteShipping> GetQuoteShippingList(int QuoteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetQuoteShippingTotal", ReplyAction="http://tempuri.org/IService1/GetQuoteShippingTotalResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetQuoteShippingTotalErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        decimal GetQuoteShippingTotal(int QuoteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateQuoteShipping", ReplyAction="http://tempuri.org/IService1/UpdateQuoteShippingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/UpdateQuoteShippingErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        string UpdateQuoteShipping(int QuoteID, int ShippingID, decimal TruckCost, decimal DieselCost, bool Delete, decimal OtherCost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetQuoteShippingChargesDetails", ReplyAction="http://tempuri.org/IService1/GetQuoteShippingChargesDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetQuoteShippingChargesDetailsErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        AgileQuoteProperty.Model.QuoteShipping GetQuoteShippingChargesDetails(int QuoteID, int ShippingID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetQuoteBaseMaterialBundleList", ReplyAction="http://tempuri.org/IService1/GetQuoteBaseMaterialBundleListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetQuoteBaseMaterialBundleListErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        AgileQuoteProperty.Model.QuoteBundleMaterialList GetQuoteBaseMaterialBundleList(int QuoteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetQuoteListForCreate", ReplyAction="http://tempuri.org/IService1/GetQuoteListForCreateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetQuoteListForCreateErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        System.Collections.Generic.List<AgileQuoteProperty.Model.QuoteDetails> GetQuoteListForCreate(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetQuoteListForApprove", ReplyAction="http://tempuri.org/IService1/GetQuoteListForApproveResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetQuoteListForApproveErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        System.Collections.Generic.List<AgileQuoteProperty.Model.QuoteDetails> GetQuoteListForApprove(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetQuoteListForCollaborate", ReplyAction="http://tempuri.org/IService1/GetQuoteListForCollaborateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetQuoteListForCollaborateErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        System.Collections.Generic.List<AgileQuoteProperty.Model.QuoteDetails> GetQuoteListForCollaborate(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAuthorizedRejectedQuoteList", ReplyAction="http://tempuri.org/IService1/GetAuthorizedRejectedQuoteListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetAuthorizedRejectedQuoteListErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        System.Collections.Generic.List<AgileQuoteProperty.Model.QuoteDetails> GetAuthorizedRejectedQuoteList(int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetQuoteBaseMaterialBundle", ReplyAction="http://tempuri.org/IService1/GetQuoteBaseMaterialBundleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetQuoteBaseMaterialBundleErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        AgileQuoteProperty.Model.QuoteBundleMaterial GetQuoteBaseMaterialBundle(int QuoteID, System.Nullable<int> MaterialID, System.Nullable<int> BundleID, string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetQuoteDetails", ReplyAction="http://tempuri.org/IService1/GetQuoteDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetQuoteDetailsErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        AgileQuoteProperty.Model.Quote GetQuoteDetails(int QuoteID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetQualitativeInfomation", ReplyAction="http://tempuri.org/IService1/GetQualitativeInfomationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetQualitativeInfomationErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        AgileQuoteProperty.Model.QuoteQualitativeInformation GetQualitativeInfomation(int QuoteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTotalQuoteQualitativeTotalService", ReplyAction="http://tempuri.org/IService1/GetTotalQuoteQualitativeTotalServiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetTotalQuoteQualitativeTotalServiceErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        AgileQuoteProperty.Model.QuoteQualitativeInformationValues GetTotalQuoteQualitativeTotalService(int QuoteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMinimumMaximumAmount", ReplyAction="http://tempuri.org/IService1/GetMinimumMaximumAmountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetMinimumMaximumAmountErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        System.Collections.Generic.List<decimal> GetMinimumMaximumAmount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMaterialListBasedOnCategory", ReplyAction="http://tempuri.org/IService1/GetMaterialListBasedOnCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetMaterialListBasedOnCategoryErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        System.Collections.Generic.List<AgileQuoteProperty.Model.MaterialProperty> GetMaterialListBasedOnCategory(string CategoryName, decimal BudgetTargetRate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSugectionMaterial", ReplyAction="http://tempuri.org/IService1/GetSugectionMaterialResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetSugectionMaterialErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        System.Collections.Generic.List<AgileQuoteProperty.Model.MaterialProperty> GetSugectionMaterial(int MaterialId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetOfferedMaterial", ReplyAction="http://tempuri.org/IService1/GetOfferedMaterialResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetOfferedMaterialErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        System.Collections.Generic.List<AgileQuoteProperty.Model.MaterialProperty> GetOfferedMaterial(int MaterialId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBundleMappingMaterial", ReplyAction="http://tempuri.org/IService1/GetBundleMappingMaterialResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetBundleMappingMaterialErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        System.Collections.Generic.List<AgileQuoteProperty.Model.MaterialProperty> GetBundleMappingMaterial(int BundleID, decimal BudgetTargetRate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBundleListBasedOnCategory", ReplyAction="http://tempuri.org/IService1/GetBundleListBasedOnCategoryResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetBundleListBasedOnCategoryErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        System.Collections.Generic.List<AgileQuoteProperty.Model.BundleProperty> GetBundleListBasedOnCategory(string CategoryName, decimal BudgetTargetRate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCategoryNameList", ReplyAction="http://tempuri.org/IService1/GetCategoryNameListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetCategoryNameListErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        System.Collections.Generic.List<string> GetCategoryNameList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetMaterialSingleRecord", ReplyAction="http://tempuri.org/IService1/GetMaterialSingleRecordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetMaterialSingleRecordErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        AgileQuoteProperty.Model.MaterialProperty GetMaterialSingleRecord(int MaterialID, decimal BudgetTargetRate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBundleSingleRecord", ReplyAction="http://tempuri.org/IService1/GetBundleSingleRecordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetBundleSingleRecordErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        AgileQuoteProperty.Model.BundleProperty GetBundleSingleRecord(int BundleID, decimal BudgetTargetRate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateBundleMaterialRecord", ReplyAction="http://tempuri.org/IService1/UpdateBundleMaterialRecordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/UpdateBundleMaterialRecordErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        string UpdateBundleMaterialRecord(int QuoteID, System.Nullable<int> MaterialID, System.Nullable<int> BundleID, string Type, int Quantity, decimal NetPrice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateBundleMaterialRecordDiscount", ReplyAction="http://tempuri.org/IService1/UpdateBundleMaterialRecordDiscountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/UpdateBundleMaterialRecordDiscountErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        string UpdateBundleMaterialRecordDiscount(int QuoteID, string Type, System.Nullable<int> MaterialID, System.Nullable<int> BundleID, int Discount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteBundleMaterialRecord", ReplyAction="http://tempuri.org/IService1/DeleteBundleMaterialRecordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/DeleteBundleMaterialRecordErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        string DeleteBundleMaterialRecord(int QuoteID, System.Nullable<int> MaterialID, System.Nullable<int> BundleID, string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddBundleMaterialToQuote", ReplyAction="http://tempuri.org/IService1/AddBundleMaterialToQuoteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/AddBundleMaterialToQuoteErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        string AddBundleMaterialToQuote(int QuoteID, System.Collections.Generic.List<AgileQuoteProperty.Model.MaterialBundleValue> MaterialIDlist, System.Collections.Generic.List<AgileQuoteProperty.Model.MaterialBundleValue> BundleIDlist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetQuoteMaterialBundleTotal", ReplyAction="http://tempuri.org/IService1/GetQuoteMaterialBundleTotalResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetQuoteMaterialBundleTotalErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        AgileQuoteProperty.Model.TotalUnitDiscount GetQuoteMaterialBundleTotal(int QuoteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSymbol", ReplyAction="http://tempuri.org/IService1/GetSymbolResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetSymbolErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        string GetSymbol(System.Nullable<int> QuoteID, string CurrencyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AssignedApproverToQuote", ReplyAction="http://tempuri.org/IService1/AssignedApproverToQuoteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/AssignedApproverToQuoteErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        string AssignedApproverToQuote(int QuoteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ApprovedQuote", ReplyAction="http://tempuri.org/IService1/ApprovedQuoteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/ApprovedQuoteErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        string ApprovedQuote(int QuoteID, int UserID, string Description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RejectQuote", ReplyAction="http://tempuri.org/IService1/RejectQuoteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/RejectQuoteErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        string RejectQuote(int QuoteID, int UserID, string Description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RejectCreatorQuote", ReplyAction="http://tempuri.org/IService1/RejectCreatorQuoteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/RejectCreatorQuoteErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        string RejectCreatorQuote(int QuoteID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertShippingToQuote", ReplyAction="http://tempuri.org/IService1/InsertShippingToQuoteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/InsertShippingToQuoteErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        string InsertShippingToQuote(AgileQuoteProperty.Model.InstallCharges oShippingCharges, int QuoteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertQualitativeInformation", ReplyAction="http://tempuri.org/IService1/InsertQualitativeInformationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/InsertQualitativeInformationErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        string InsertQualitativeInformation(int QuoteID, string Leadtime, string WinProbability, string ScopeofWork, string ExecutiveSummary, string PrimaryCompetitor, string SellingPrice, string PaymentTerms, string RiskMitigation, string NewRepeatBusiness, string AnyOtherComments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertQualitativeInformationUpdate", ReplyAction="http://tempuri.org/IService1/InsertQualitativeInformationUpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/InsertQualitativeInformationUpdateErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        string InsertQualitativeInformationUpdate(int QuoteID, string Leadtime, string WinProbability, string ScopeofWork, string ExecutiveSummary, string PrimaryCompetitor, string SellingPrice, string PaymentTerms, string RiskMitigation, string NewRepeatBusiness, string AnyOtherComments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetQuoteShippingDetails", ReplyAction="http://tempuri.org/IService1/GetQuoteShippingDetailsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetQuoteShippingDetailsErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        AgileQuoteProperty.Model.InstallCharges GetQuoteShippingDetails(int QuoteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetQuoteMaterialBundleListwithwarranty", ReplyAction="http://tempuri.org/IService1/GetQuoteMaterialBundleListwithwarrantyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetQuoteMaterialBundleListwithwarrantyErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        System.Collections.Generic.List<AgileQuoteProperty.Model.QuoteBundleMaterial> GetQuoteMaterialBundleListwithwarranty(int QuoteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateMaterialBundleWarrentyRecord", ReplyAction="http://tempuri.org/IService1/UpdateMaterialBundleWarrentyRecordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/UpdateMaterialBundleWarrentyRecordErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        string UpdateMaterialBundleWarrentyRecord(int QuoteID, string Type, System.Nullable<int> MaterialId, System.Nullable<int> BundleId, int OverrideWarrenty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertQuoteBoughtOutItem", ReplyAction="http://tempuri.org/IService1/InsertQuoteBoughtOutItemResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/InsertQuoteBoughtOutItemErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        string InsertQuoteBoughtOutItem(int QuoteID, string ItemName, decimal UnitPrice, int Quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetQuoteBasedBoughtoutItemList", ReplyAction="http://tempuri.org/IService1/GetQuoteBasedBoughtoutItemListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetQuoteBasedBoughtoutItemListErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        System.Collections.Generic.List<AgileQuoteProperty.Model.QuoteBoughtOutItemModel> GetQuoteBasedBoughtoutItemList(int QuoteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetQuoteBasedBoughtoutItemRecord", ReplyAction="http://tempuri.org/IService1/GetQuoteBasedBoughtoutItemRecordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetQuoteBasedBoughtoutItemRecordErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        AgileQuoteProperty.Model.QuoteBoughtOutItemModel GetQuoteBasedBoughtoutItemRecord(int QuoteID, int ItemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateQuoteBasedBoughtoutItemRecord", ReplyAction="http://tempuri.org/IService1/UpdateQuoteBasedBoughtoutItemRecordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/UpdateQuoteBasedBoughtoutItemRecordErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        string UpdateQuoteBasedBoughtoutItemRecord(int QuoteID, decimal UnitPrice, int Quantity, int ItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteQuoteBasedBoughtoutItemRecord", ReplyAction="http://tempuri.org/IService1/DeleteQuoteBasedBoughtoutItemRecordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/DeleteQuoteBasedBoughtoutItemRecordErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        string DeleteQuoteBasedBoughtoutItemRecord(int QuoteID, int ItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTotalCostBoughtoutItem", ReplyAction="http://tempuri.org/IService1/GetTotalCostBoughtoutItemResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetTotalCostBoughtoutItemErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        AgileQuoteProperty.Model.TotalUnitDiscount GetTotalCostBoughtoutItem(int QuoteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetRoleNameList", ReplyAction="http://tempuri.org/IService1/GetRoleNameListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetRoleNameListErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        System.Collections.Generic.List<string> GetRoleNameList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/QuoteAuthorizeStatus", ReplyAction="http://tempuri.org/IService1/QuoteAuthorizeStatusResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/QuoteAuthorizeStatusErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        bool QuoteAuthorizeStatus(int QuoteID, int UserID, string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetcollabratorListOnQuote", ReplyAction="http://tempuri.org/IService1/GetcollabratorListOnQuoteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetcollabratorListOnQuoteErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        System.Collections.Generic.List<AgileQuoteProperty.Model.QuoteCollabrationModel> GetcollabratorListOnQuote(int QuoteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCollaboratorList", ReplyAction="http://tempuri.org/IService1/GetCollaboratorListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetCollaboratorListErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        System.Collections.Generic.List<AgileQuoteProperty.Model.QuoteCollabrationModel> GetCollaboratorList(int QuoteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCollaboratorRemarks", ReplyAction="http://tempuri.org/IService1/GetCollaboratorRemarksResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetCollaboratorRemarksErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        string GetCollaboratorRemarks(int QuoteID, int UserID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertCollabratorQuote", ReplyAction="http://tempuri.org/IService1/InsertCollabratorQuoteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/InsertCollabratorQuoteErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        string InsertCollabratorQuote(int QuoteID, System.Collections.Generic.Dictionary<int, string> UserList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateCollabratorStatusForQuote", ReplyAction="http://tempuri.org/IService1/UpdateCollabratorStatusForQuoteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/UpdateCollabratorStatusForQuoteErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        string UpdateCollabratorStatusForQuote(int QuoteID, int UserID, string Status, string StatusDescription, bool Delete);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetApproverQuoteStatusList", ReplyAction="http://tempuri.org/IService1/GetApproverQuoteStatusListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetApproverQuoteStatusListErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        System.Collections.Generic.List<AgileQuoteProperty.Model.ApproverQuoteStatus> GetApproverQuoteStatusList(int QuoteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetDataErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AgileQuoteProperty.Model.Error), Action="http://tempuri.org/IService1/GetDataUsingDataContractErrorFault", Name="Error", Namespace="http://schemas.datacontract.org/2004/07/AgileQuoteProperty.Model")]
        AgileQuoteWebApplication.AgileQuoteService.CompositeType GetDataUsingDataContract(AgileQuoteWebApplication.AgileQuoteService.CompositeType composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : AgileQuoteWebApplication.AgileQuoteService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<AgileQuoteWebApplication.AgileQuoteService.IService1>, AgileQuoteWebApplication.AgileQuoteService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.Dictionary<int, string> CompanyList() {
            return base.Channel.CompanyList();
        }
        
        public bool CheckAuthentication(AgileQuoteProperty.Model.Login oLogin) {
            return base.Channel.CheckAuthentication(oLogin);
        }
        
        public bool CheckUsername(AgileQuoteProperty.Model.Login oLogin) {
            return base.Channel.CheckUsername(oLogin);
        }
        
        public System.Collections.Generic.Dictionary<int, string> GetUserID(AgileQuoteProperty.Model.Login oLogin) {
            return base.Channel.GetUserID(oLogin);
        }
        
        public string GetUserRole(AgileQuoteProperty.Model.Login oLogin) {
            return base.Channel.GetUserRole(oLogin);
        }
        
        public System.Collections.Generic.List<AgileQuoteProperty.Model.CurrencyValues> LoadCurrency() {
            return base.Channel.LoadCurrency();
        }
        
        public System.Collections.Generic.List<AgileQuoteProperty.Model.SalesOrganizations> LoadSalesOrg() {
            return base.Channel.LoadSalesOrg();
        }
        
        public System.Collections.Generic.List<string> LoadStatus() {
            return base.Channel.LoadStatus();
        }
        
        public System.Collections.Generic.List<string> LoadBusinessStatus() {
            return base.Channel.LoadBusinessStatus();
        }
        
        public int InsertQuoteDetails(AgileQuoteProperty.Model.Quote qQuote) {
            return base.Channel.InsertQuoteDetails(qQuote);
        }
        
        public int QuoteSaveAsNewQuote(int QuoteID, int UserID) {
            return base.Channel.QuoteSaveAsNewQuote(QuoteID, UserID);
        }
        
        public void UpdateQuoteDetails(AgileQuoteProperty.Model.Quote qQuote, int QuoteID) {
            base.Channel.UpdateQuoteDetails(qQuote, QuoteID);
        }
        
        public string InsertQuotePriceDetails(int QuoteID) {
            return base.Channel.InsertQuotePriceDetails(QuoteID);
        }
        
        public string QuoteShippingInsert(int QuoteID, decimal TruckCost, decimal DieselCost, decimal OtherCost) {
            return base.Channel.QuoteShippingInsert(QuoteID, TruckCost, DieselCost, OtherCost);
        }
        
        public System.Collections.Generic.List<AgileQuoteProperty.Model.QuoteShipping> GetQuoteShippingList(int QuoteID) {
            return base.Channel.GetQuoteShippingList(QuoteID);
        }
        
        public decimal GetQuoteShippingTotal(int QuoteID) {
            return base.Channel.GetQuoteShippingTotal(QuoteID);
        }
        
        public string UpdateQuoteShipping(int QuoteID, int ShippingID, decimal TruckCost, decimal DieselCost, bool Delete, decimal OtherCost) {
            return base.Channel.UpdateQuoteShipping(QuoteID, ShippingID, TruckCost, DieselCost, Delete, OtherCost);
        }
        
        public AgileQuoteProperty.Model.QuoteShipping GetQuoteShippingChargesDetails(int QuoteID, int ShippingID) {
            return base.Channel.GetQuoteShippingChargesDetails(QuoteID, ShippingID);
        }
        
        public AgileQuoteProperty.Model.QuoteBundleMaterialList GetQuoteBaseMaterialBundleList(int QuoteID) {
            return base.Channel.GetQuoteBaseMaterialBundleList(QuoteID);
        }
        
        public System.Collections.Generic.List<AgileQuoteProperty.Model.QuoteDetails> GetQuoteListForCreate(int UserID) {
            return base.Channel.GetQuoteListForCreate(UserID);
        }
        
        public System.Collections.Generic.List<AgileQuoteProperty.Model.QuoteDetails> GetQuoteListForApprove(int UserID) {
            return base.Channel.GetQuoteListForApprove(UserID);
        }
        
        public System.Collections.Generic.List<AgileQuoteProperty.Model.QuoteDetails> GetQuoteListForCollaborate(int UserID) {
            return base.Channel.GetQuoteListForCollaborate(UserID);
        }
        
        public System.Collections.Generic.List<AgileQuoteProperty.Model.QuoteDetails> GetAuthorizedRejectedQuoteList(int UserID) {
            return base.Channel.GetAuthorizedRejectedQuoteList(UserID);
        }
        
        public AgileQuoteProperty.Model.QuoteBundleMaterial GetQuoteBaseMaterialBundle(int QuoteID, System.Nullable<int> MaterialID, System.Nullable<int> BundleID, string Type) {
            return base.Channel.GetQuoteBaseMaterialBundle(QuoteID, MaterialID, BundleID, Type);
        }
        
        public AgileQuoteProperty.Model.Quote GetQuoteDetails(int QuoteID, int UserID) {
            return base.Channel.GetQuoteDetails(QuoteID, UserID);
        }
        
        public AgileQuoteProperty.Model.QuoteQualitativeInformation GetQualitativeInfomation(int QuoteID) {
            return base.Channel.GetQualitativeInfomation(QuoteID);
        }
        
        public AgileQuoteProperty.Model.QuoteQualitativeInformationValues GetTotalQuoteQualitativeTotalService(int QuoteID) {
            return base.Channel.GetTotalQuoteQualitativeTotalService(QuoteID);
        }
        
        public System.Collections.Generic.List<decimal> GetMinimumMaximumAmount() {
            return base.Channel.GetMinimumMaximumAmount();
        }
        
        public System.Collections.Generic.List<AgileQuoteProperty.Model.MaterialProperty> GetMaterialListBasedOnCategory(string CategoryName, decimal BudgetTargetRate) {
            return base.Channel.GetMaterialListBasedOnCategory(CategoryName, BudgetTargetRate);
        }
        
        public System.Collections.Generic.List<AgileQuoteProperty.Model.MaterialProperty> GetSugectionMaterial(int MaterialId) {
            return base.Channel.GetSugectionMaterial(MaterialId);
        }
        
        public System.Collections.Generic.List<AgileQuoteProperty.Model.MaterialProperty> GetOfferedMaterial(int MaterialId) {
            return base.Channel.GetOfferedMaterial(MaterialId);
        }
        
        public System.Collections.Generic.List<AgileQuoteProperty.Model.MaterialProperty> GetBundleMappingMaterial(int BundleID, decimal BudgetTargetRate) {
            return base.Channel.GetBundleMappingMaterial(BundleID, BudgetTargetRate);
        }
        
        public System.Collections.Generic.List<AgileQuoteProperty.Model.BundleProperty> GetBundleListBasedOnCategory(string CategoryName, decimal BudgetTargetRate) {
            return base.Channel.GetBundleListBasedOnCategory(CategoryName, BudgetTargetRate);
        }
        
        public System.Collections.Generic.List<string> GetCategoryNameList() {
            return base.Channel.GetCategoryNameList();
        }
        
        public AgileQuoteProperty.Model.MaterialProperty GetMaterialSingleRecord(int MaterialID, decimal BudgetTargetRate) {
            return base.Channel.GetMaterialSingleRecord(MaterialID, BudgetTargetRate);
        }
        
        public AgileQuoteProperty.Model.BundleProperty GetBundleSingleRecord(int BundleID, decimal BudgetTargetRate) {
            return base.Channel.GetBundleSingleRecord(BundleID, BudgetTargetRate);
        }
        
        public string UpdateBundleMaterialRecord(int QuoteID, System.Nullable<int> MaterialID, System.Nullable<int> BundleID, string Type, int Quantity, decimal NetPrice) {
            return base.Channel.UpdateBundleMaterialRecord(QuoteID, MaterialID, BundleID, Type, Quantity, NetPrice);
        }
        
        public string UpdateBundleMaterialRecordDiscount(int QuoteID, string Type, System.Nullable<int> MaterialID, System.Nullable<int> BundleID, int Discount) {
            return base.Channel.UpdateBundleMaterialRecordDiscount(QuoteID, Type, MaterialID, BundleID, Discount);
        }
        
        public string DeleteBundleMaterialRecord(int QuoteID, System.Nullable<int> MaterialID, System.Nullable<int> BundleID, string Type) {
            return base.Channel.DeleteBundleMaterialRecord(QuoteID, MaterialID, BundleID, Type);
        }
        
        public string AddBundleMaterialToQuote(int QuoteID, System.Collections.Generic.List<AgileQuoteProperty.Model.MaterialBundleValue> MaterialIDlist, System.Collections.Generic.List<AgileQuoteProperty.Model.MaterialBundleValue> BundleIDlist) {
            return base.Channel.AddBundleMaterialToQuote(QuoteID, MaterialIDlist, BundleIDlist);
        }
        
        public AgileQuoteProperty.Model.TotalUnitDiscount GetQuoteMaterialBundleTotal(int QuoteID) {
            return base.Channel.GetQuoteMaterialBundleTotal(QuoteID);
        }
        
        public string GetSymbol(System.Nullable<int> QuoteID, string CurrencyName) {
            return base.Channel.GetSymbol(QuoteID, CurrencyName);
        }
        
        public string AssignedApproverToQuote(int QuoteID) {
            return base.Channel.AssignedApproverToQuote(QuoteID);
        }
        
        public string ApprovedQuote(int QuoteID, int UserID, string Description) {
            return base.Channel.ApprovedQuote(QuoteID, UserID, Description);
        }
        
        public string RejectQuote(int QuoteID, int UserID, string Description) {
            return base.Channel.RejectQuote(QuoteID, UserID, Description);
        }
        
        public string RejectCreatorQuote(int QuoteID, int UserID) {
            return base.Channel.RejectCreatorQuote(QuoteID, UserID);
        }
        
        public string InsertShippingToQuote(AgileQuoteProperty.Model.InstallCharges oShippingCharges, int QuoteID) {
            return base.Channel.InsertShippingToQuote(oShippingCharges, QuoteID);
        }
        
        public string InsertQualitativeInformation(int QuoteID, string Leadtime, string WinProbability, string ScopeofWork, string ExecutiveSummary, string PrimaryCompetitor, string SellingPrice, string PaymentTerms, string RiskMitigation, string NewRepeatBusiness, string AnyOtherComments) {
            return base.Channel.InsertQualitativeInformation(QuoteID, Leadtime, WinProbability, ScopeofWork, ExecutiveSummary, PrimaryCompetitor, SellingPrice, PaymentTerms, RiskMitigation, NewRepeatBusiness, AnyOtherComments);
        }
        
        public string InsertQualitativeInformationUpdate(int QuoteID, string Leadtime, string WinProbability, string ScopeofWork, string ExecutiveSummary, string PrimaryCompetitor, string SellingPrice, string PaymentTerms, string RiskMitigation, string NewRepeatBusiness, string AnyOtherComments) {
            return base.Channel.InsertQualitativeInformationUpdate(QuoteID, Leadtime, WinProbability, ScopeofWork, ExecutiveSummary, PrimaryCompetitor, SellingPrice, PaymentTerms, RiskMitigation, NewRepeatBusiness, AnyOtherComments);
        }
        
        public AgileQuoteProperty.Model.InstallCharges GetQuoteShippingDetails(int QuoteID) {
            return base.Channel.GetQuoteShippingDetails(QuoteID);
        }
        
        public System.Collections.Generic.List<AgileQuoteProperty.Model.QuoteBundleMaterial> GetQuoteMaterialBundleListwithwarranty(int QuoteID) {
            return base.Channel.GetQuoteMaterialBundleListwithwarranty(QuoteID);
        }
        
        public string UpdateMaterialBundleWarrentyRecord(int QuoteID, string Type, System.Nullable<int> MaterialId, System.Nullable<int> BundleId, int OverrideWarrenty) {
            return base.Channel.UpdateMaterialBundleWarrentyRecord(QuoteID, Type, MaterialId, BundleId, OverrideWarrenty);
        }
        
        public string InsertQuoteBoughtOutItem(int QuoteID, string ItemName, decimal UnitPrice, int Quantity) {
            return base.Channel.InsertQuoteBoughtOutItem(QuoteID, ItemName, UnitPrice, Quantity);
        }
        
        public System.Collections.Generic.List<AgileQuoteProperty.Model.QuoteBoughtOutItemModel> GetQuoteBasedBoughtoutItemList(int QuoteID) {
            return base.Channel.GetQuoteBasedBoughtoutItemList(QuoteID);
        }
        
        public AgileQuoteProperty.Model.QuoteBoughtOutItemModel GetQuoteBasedBoughtoutItemRecord(int QuoteID, int ItemID) {
            return base.Channel.GetQuoteBasedBoughtoutItemRecord(QuoteID, ItemID);
        }
        
        public string UpdateQuoteBasedBoughtoutItemRecord(int QuoteID, decimal UnitPrice, int Quantity, int ItemId) {
            return base.Channel.UpdateQuoteBasedBoughtoutItemRecord(QuoteID, UnitPrice, Quantity, ItemId);
        }
        
        public string DeleteQuoteBasedBoughtoutItemRecord(int QuoteID, int ItemId) {
            return base.Channel.DeleteQuoteBasedBoughtoutItemRecord(QuoteID, ItemId);
        }
        
        public AgileQuoteProperty.Model.TotalUnitDiscount GetTotalCostBoughtoutItem(int QuoteID) {
            return base.Channel.GetTotalCostBoughtoutItem(QuoteID);
        }
        
        public System.Collections.Generic.List<string> GetRoleNameList() {
            return base.Channel.GetRoleNameList();
        }
        
        public bool QuoteAuthorizeStatus(int QuoteID, int UserID, string Type) {
            return base.Channel.QuoteAuthorizeStatus(QuoteID, UserID, Type);
        }
        
        public System.Collections.Generic.List<AgileQuoteProperty.Model.QuoteCollabrationModel> GetcollabratorListOnQuote(int QuoteID) {
            return base.Channel.GetcollabratorListOnQuote(QuoteID);
        }
        
        public System.Collections.Generic.List<AgileQuoteProperty.Model.QuoteCollabrationModel> GetCollaboratorList(int QuoteID) {
            return base.Channel.GetCollaboratorList(QuoteID);
        }
        
        public string GetCollaboratorRemarks(int QuoteID, int UserID) {
            return base.Channel.GetCollaboratorRemarks(QuoteID, UserID);
        }
        
        public string InsertCollabratorQuote(int QuoteID, System.Collections.Generic.Dictionary<int, string> UserList) {
            return base.Channel.InsertCollabratorQuote(QuoteID, UserList);
        }
        
        public string UpdateCollabratorStatusForQuote(int QuoteID, int UserID, string Status, string StatusDescription, bool Delete) {
            return base.Channel.UpdateCollabratorStatusForQuote(QuoteID, UserID, Status, StatusDescription, Delete);
        }
        
        public System.Collections.Generic.List<AgileQuoteProperty.Model.ApproverQuoteStatus> GetApproverQuoteStatusList(int QuoteID) {
            return base.Channel.GetApproverQuoteStatusList(QuoteID);
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public AgileQuoteWebApplication.AgileQuoteService.CompositeType GetDataUsingDataContract(AgileQuoteWebApplication.AgileQuoteService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
    }
}
